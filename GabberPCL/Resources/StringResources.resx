<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
    <!-- Shared comms -->
    <data name="common.comms.loading" xml:space="preserve">
        <value>Loading, please wait</value>
    </data>
    <data name="common.comms.error" xml:space="preserve">
        <value>Something went wrong</value>
    </data>
    <data name="common.comms.error.server" xml:space="preserve">
        <value>There was an issue communicating with the server. Please check your internet connection and try again.</value>
    </data>
    <data name="common.comms.retry" xml:space="preserve">
        <value>Retry</value>
    </data>
    <data name="common.comms.cancel" xml:space="preserve">
        <value>Cancel</value>
    </data>
    <data name="common.comms.ok" xml:space="preserve">
        <value>OK</value>
    </data>
    <!-- MAIN MENU -->
    <data name="common.menu.projects" xml:space="preserve">
        <value>Themes</value>
    </data>
    <data name="common.menu.gabbers" xml:space="preserve">
        <value>Uploads</value>
    </data>
    <data name="common.menu.settings" xml:space="preserve">
        <value>Settings</value>
    </data>
    <!-- SETTINGS -->
    <data name="settings.title" xml:space="preserve">
        <value>Settings</value>
    </data>
    <data name="settings.about" xml:space="preserve">
        <value>About</value>
    </data>
    <data name="settings.chooseAppLanguage" xml:space="preserve">
        <value>Application Language</value>
    </data>
    <data name="settings.chooseConvoLanguage" xml:space="preserve">
        <value>Conversation Language</value>
    </data>
    <data name="settings.logout" xml:space="preserve">
        <value>Log Out</value>
    </data>
    <data name="settings.logout.dialog.title" xml:space="preserve">
        <value>Are you sure?</value>
    </data>
    <data name="settings.logout.dialog.message" xml:space="preserve">
        <value>Logging out will delete any conversations waiting to upload. Are you sure you want to do this?</value>
    </data>
    <data name="settings.logout.dialog.confirm" xml:space="preserve">
        <value>Logout</value>
    </data>
    <!-- SHARED UI FORMS -->
    <data name="common.ui.forms.email.label" xml:space="preserve">
        <value>Email address</value>
    </data>
    <data name="common.ui.forms.password.label" xml:space="preserve">
        <value>Password</value>
    </data>
    <data name="common.ui.forms.password.confirm.label" xml:space="preserve">
        <value>Confirm password</value>
    </data>
    <data name="common.ui.forms.email.validate.empty" xml:space="preserve">
        <value>An email address is required</value>
    </data>
    <data name="common.ui.forms.email.validate.invalid" xml:space="preserve">
        <value>The email provided is invalid</value>
    </data>
    <data name="common.ui.forms.password.validate.empty" xml:space="preserve">
        <value>A password is required</value>
    </data>
    <data name="common.ui.forms.password.validate.mismatch" xml:space="preserve">
        <value>Entered passwords don't match</value>
    </data>
    <data name="common.ui.forms.language.error" xml:space="preserve">
        <value>Please choose your preferred spoken language.</value>
    </data>
    <data name="common.ui.forms.language.default" xml:space="preserve">
        <value>Spoken language</value>
    </data>
    <!-- ONBOARDING PAGE: 0 -->
    <data name="onboarding.ui.page.zero.title" xml:space="preserve">
        <value>Welcome to Gabber</value>
    </data>
    <data name="onboarding.ui.page.zero.content" xml:space="preserve">
        <value>Gabber uses topics to structure and capture audio conversations, which are used on the website to represent who was present and what was discussed.

    The next screens explain each step to create a conversation using Gabber.</value>
    </data>
    <!-- ONBOARDING PAGE: 1 -->
    <data name="onboarding.ui.page.first.title" xml:space="preserve">
        <value>Step 1: Choose a Theme</value>
    </data>
    <data name="onboarding.ui.page.first.content" xml:space="preserve">
        <value>Tap on the project you want to contribute to. Projects contain topics to help structure your conversation.</value>
    </data>
    <!-- ONBOARDING PAGE: 2 -->
    <data name="onboarding.ui.page.second.title" xml:space="preserve">
        <value>Step 2: Add Participants</value>
    </data>
    <data name="onboarding.ui.page.second.content" xml:space="preserve">
        <value>All you need is the name and email of the people involved in the conversation</value>
    </data>
    <!-- ONBOARDING PAGE: 3 -->
    <data name="onboarding.ui.page.third.title" xml:space="preserve">
        <value>Step 3: Start Recording</value>
    </data>
    <data name="onboarding.ui.page.third.content" xml:space="preserve">
        <value>Click on a discussion point to start recording. These points help others understand what you’re talking about, so be sure to tap them as your conversation changes topics.</value>
    </data>
    <!-- ONBOARDING PAGE: 4 -->
    <data name="onboarding.ui.page.fourth.title" xml:space="preserve">
        <value>Step 4: Upload and Consent</value>
    </data>
    <data name="onboarding.ui.page.fourth.content" xml:space="preserve">
        <value>When the conversation ends, you can upload the recording to the website for others to listen to. All participants are notified and can review their consent.
</value>
    </data>
    <!-- USER LOGIN SCREEN: API errors -->
    <data name="login.api.error.GENERAL" xml:space="preserve">
        <value>An unknown error has occurred.</value>
    </data>
    <data name="login.api.error.NO_INTERNET" xml:space="preserve">
        <value>You are not connected to the internet.</value>
    </data>
    <data name="login.api.error.auth.INVALID_PASSWORD" xml:space="preserve">
        <value>You have provided an incorrect password for that email.</value>
    </data>
    <data name="login.api.error.auth.USER_404" xml:space="preserve">
        <value>There is no registered user with that email address.</value>
    </data>
    <data name="login.api.error.auth.UNVERIFIED_USER" xml:space="preserve">
        <value>This user has not verified their account.</value>
    </data>
    <!-- USER LOGIN SCREEN: UI -->
    <data name="login.ui.title" xml:space="preserve">
        <value>Login to Gabber</value>
    </data>
    <data name="login.ui.submit.button" xml:space="preserve">
        <value>Login</value>
    </data>
    <!-- USER REGISTER SCREEN: API errors -->
    <data name="register.api.error.auth.INVALID_PASSWORD" xml:space="preserve">
        <value>You have provided an incorrect password for that email</value>
    </data>
    <data name="register.api.error.auth.USER_404" xml:space="preserve">
        <value>There is no registered user with that email address</value>
    </data>
    <!-- USER REGISTER SCREEN: UI -->
    <data name="register.ui.title" xml:space="preserve">
        <value>Create a Gabber account</value>
    </data>
    <data name="register.ui.fullname.label" xml:space="preserve">
        <value>Fullname</value>
    </data>
    <data name="register.ui.terms.label" xml:space="preserve">
        <value>&lt;i&gt;By continuing to use Gabber, you agree with our &lt;a href={0}/terms&gt;Terms of Use&lt;/a&gt; &amp; &lt;a href={0}/privacy&gt;Privacy Policy&lt;/a&gt;&lt;/i&gt;</value>
    </data>
    <data name="register.ui.submit.button" xml:space="preserve">
        <value>Register</value>
    </data>
    <!-- USER REGISTER SCREEN: UI errors -->
    <data name="register.ui.fullname.validate.empty" xml:space="preserve">
        <value>Your fullname is empty</value>
    </data>
    <!-- REGISTER VERIFICATION PAGE -->
    <data name="register.verify.ui.page.title" xml:space="preserve">
        <value>Email Verification</value>
    </data>
    <data name="register.verify.ui.page.content" xml:space="preserve">
        <value>Please confirm your email address ({0}) by tapping the button in the confirmation email we sent you. This will open the Gabber application and log you in automatically.</value>
    </data>
    <data name="register.verify.ui.page.subcontent" xml:space="preserve">
        <value>If you have verified your email address through the website, then please manually login to the application.</value>
    </data>
    <data name="register.verify.ui.button.openemail" xml:space="preserve">
        <value>Take me to my email</value>
    </data>
    <!-- REGISTER VERIFYING EMAIL PAGE -->
    <data name="register.verifying.activity.label" xml:space="preserve">
        <value>Gabber to verify email</value>
        <comment>Appears in Android application list when a button is clicked for a gabber url, i.e. in an email.</comment>
    </data>
    <data name="register.verifying.ui.page.title" xml:space="preserve">
        <value>Verifying Email</value>
    </data>
    <data name="register.verifying.ui.page.content" xml:space="preserve">
        <value>Verifying your account. This may take a moment.</value>
    </data>
    <data name="register.verifying.ui.page.content.error" xml:space="preserve">
        <value>Unable to verify your account.</value>
    </data>
    <data name="register.verifying.ui.button.login" xml:space="preserve">
        <value>Login</value>
        <comment>Appears when verification fails</comment>
    </data>
    <!-- REGISTER VERIFYING EMAIL PAGE: API errors -->
    <data name="register.verifying.api.error.auth.ALREADY_VERIFIED" xml:space="preserve">
        <value>Your account has already been verified. Try logging in instead.</value>
    </data>
    <data name="register.verifying.api.error.auth.TOKEN_404" xml:space="preserve">
        <value>There was an error veryifing your account. Try logging in or resetting your password instead.</value>
    </data>
    <data name="register.verifying.api.error.auth.TOKEN_EXPIRED" xml:space="preserve">
        <value>The URL in the link you clicked has expired. Try logging in or resetting your password instead.</value>
    </data>
    <!-- PROJECTS FRAGMENT -->
    <data name="projects.ui.title" xml:space="preserve">
        <value>Themes</value>
    </data>
    <data name="projects.ui.instructions" xml:space="preserve">
        <value>Choose a project that you want to have a conversation about</value>
    </data>
    <data name="projects.ui.fetching" xml:space="preserve">
        <value>Fetching themes...</value>
    </data>
    <data name="projects.ui.topics" xml:space="preserve">
        <value>Discussion points</value>
    </data>
    <data name="projects.ui.get.started.button" xml:space="preserve">
        <value>Get Started</value>
    </data>
    <!-- SESSIONS FRAGMENT -->
    <data name="sessions.ui.title" xml:space="preserve">
        <value>Upload Queue</value>
    </data>
    <data name="sessions.ui.header.instructions" xml:space="preserve">
        <value>These are the recordings that you have made and that have not yet been uploaded to the website.</value>
    </data>
    <data name="sessions.ui.body.instructions" xml:space="preserve">
        <value>You have no conversations waiting to be uploaded</value>
    </data>
    <data name="sessions.ui.submit.button" xml:space="preserve">
        <value>Upload all</value>
    </data>
    <data name="sessions.ui.wifiwarning.title" xml:space="preserve">
        <value>Not Connected to WiFi!</value>
    </data>
    <data name="sessions.ui.wifiwarning.message" xml:space="preserve">
        <value>Do you want to upload without connecting to WiFi? If not, you can always upload your conversations later.</value>
    </data>
    <data name="sessions.ui.wifiwarning.confirm" xml:space="preserve">
        <value>Upload now</value>
    </data>
    <data name="sessions.ui.wifiwarning.cancel" xml:space="preserve">
        <value>Upload later</value>
    </data>
    <data name="sessions.ui.message.upload.success" xml:space="preserve">
        <value>Conversation uploaded successfully</value>
    </data>
    <data name="sessions.ui.message.upload.fail" xml:space="preserve">
        <value>Failed to upload. Try again soon.</value>
    </data>
    <data name="sessions.ui.message.upload.inprogress" xml:space="preserve">
        <value>A conversation is currently being uploaded.</value>
    </data>
    <!-- ABOUT FRAGMENT -->
    <data name="about.ui.title" xml:space="preserve">
        <value>What is Gabber?</value>
    </data>
    <data name="about.ui.content" xml:space="preserve">
        <value>Gabber uses topics to structure and capture audio conversations, which are used on the website to represent who was present and what was discussed.</value>
    </data>
    <data name="about.ui.url.description" xml:space="preserve">
        <value>Listen to Gabber recordings:</value>
    </data>
    <!-- PARTICIPANTS SCREEN -->
    <data name="participants.ui.title" xml:space="preserve">
        <value>Participants</value>
    </data>
    <data name="participants.ui.instructions" xml:space="preserve">
        <value>Who's in this conversation? Add a new participant by tapping the icon in the menu bar or select a person below and tap start recording when you are ready</value>
    </data>
    <data name="participants.ui.numselected" xml:space="preserve">
        <value>{0} participants selected</value>
    </data>
    <data name="participants.ui.startrecording.button" xml:space="preserve">
        <value>Continue</value>
    </data>
    <!-- PARTICIPANTS SCREEN VALIDATION -->
    <data name="participants.ui.validation.noneselected" xml:space="preserve">
        <value>At least one participant must be selected</value>
    </data>
    <data name="participants.ui.validation.oneselected.title" xml:space="preserve">
        <value>One participant selected</value>
    </data>
    <data name="participants.ui.validation.oneselected.message" xml:space="preserve">
        <value>Are you sure that you only want to select one participant?</value>
    </data>
    <data name="participants.ui.validation.oneselected.continue" xml:space="preserve">
        <value>Continue</value>
    </data>
    <data name="participants.ui.validation.oneselected.cancel" xml:space="preserve">
        <value>Cancel</value>
    </data>
    <!-- ADD PARTICIPANT DIALOG -->
    <data name="participants.ui.dialog.add.title" xml:space="preserve">
        <value>Add a new participant</value>
    </data>
    <data name="participants.ui.dialog.add.positive" xml:space="preserve">
        <value>Add</value>
    </data>
    <data name="participants.ui.dialog.add.negative" xml:space="preserve">
        <value>Cancel</value>
    </data>
    <!-- RESEARCH CONSENT -->
    <data name="consent.research.toolbar.title" xml:space="preserve">
        <value>Research Consent</value>
    </data>
    <data name="consent.research.submit" xml:space="preserve">
        <value>Continue</value>
    </data>
    <data name="consent.research.title" xml:space="preserve">
        <value>Consent for use in research</value>
    </data>
    <data name="consent.research.body" xml:space="preserve">
        <value>The conversation you are about to record will become part of {0}'s research project '{1}'. Any published work will not include details that could be used to identify yourself or other participants.</value>
    </data>
    <data name="consent.research.details.button" xml:space="preserve">
        <value>How will my data be used?</value>
    </data>
    <data name="consent.research.form" xml:space="preserve">
        <value>All participants understand and agree to this recording and their anonymized details being used in research.</value>
    </data>
    <!-- Gabber CONSENT -->
    <data name="consent.gabber.toolbar.title" xml:space="preserve">
        <value>Configure Conversation</value>
    </data>
    <data name="consent.gabber.submit" xml:space="preserve">
        <value>Continue</value>
    </data>
    <data name="consent.gabber.title.control" xml:space="preserve">
        <value>How you control the data you capture</value>
    </data>
    <data name="consent.gabber.title.decision" xml:space="preserve">
        <value>Who can access your conversation?</value>
    </data>
    <data name="consent.gabber.body.decision" xml:space="preserve">
        <value>When uploaded, your conversation will be available at {0}. Research staff and project administrators can always access recordings.</value>
    </data>
    <!-- Gabber CONSENT Public -->
    <data name="consent.gabber.consent.type.public.full" xml:space="preserve">
        <value>Your recording is available to anyone visiting the website</value>
    </data>
    <data name="consent.gabber.consent.type.public.brief" xml:space="preserve">
        <value>Anyone</value>
    </data>
    <!-- Gabber CONSENT Members -->
    <data name="consent.gabber.consent.type.members.full" xml:space="preserve">
        <value>{0} {1} access to this project</value>
    </data>
    <data name="consent.gabber.consent.type.members.full.plural" xml:space="preserve">
        <value>people have</value>
    </data>
    <data name="consent.gabber.consent.type.members.full.singular" xml:space="preserve">
        <value>person has</value>
    </data>
    <data name="consent.gabber.consent.type.members.brief" xml:space="preserve">
        <value>Only others who have contributed or were invited to ‘{0}’</value>
    </data>
    <!-- Gabber CONSENT Private -->
    <data name="consent.gabber.consent.type.private.full" xml:space="preserve">
        <value>People with access: {0}</value>
    </data>
    <data name="consent.gabber.consent.type.private.full.you" xml:space="preserve">
        <value>You</value>
    </data>
    <data name="consent.gabber.consent.type.private.brief" xml:space="preserve">
        <value>Only participants</value>
    </data>
    <data name="conversation.consent.gabber.submit" xml:space="preserve">
        <value>Review consent</value>
    </data>
    <data name="conversation.language.prompt" xml:space="preserve">
        <value>What language will this conversation be held in?</value>
    </data>
    <!-- RECORD SCREEN -->
    <data name="recording.ui.title" xml:space="preserve">
        <value>Record Conversation</value>
    </data>
    <data name="recording.ui.title.active" xml:space="preserve">
        <value>Recording Conversation</value>
    </data>
    <data name="recording.ui.instructions.header" xml:space="preserve">
        <value>Select a topic to begin recording, and then tap topics as the conversation changes.</value>
    </data>
    <!-- RECORD SCREEN RECORD PERMISSION -->
    <data name="recording.ui.permission.title" xml:space="preserve">
        <value>Permission required</value>
    </data>
    <data name="recording.ui.permission.body" xml:space="preserve">
        <value>Microphone access is required to record a Gabber</value>
    </data>
    <data name="recording.ui.permission.button.negative" xml:space="preserve">
        <value>Cancel</value>
    </data>
    <data name="recording.ui.permission.button.positive" xml:space="preserve">
        <value>Configure</value>
    </data>
    <!-- RECORD SCREEN FINISH -->
    <data name="recording.ui.dialog.finish.title" xml:space="preserve">
        <value>You have covered {0} of the {1} topics. Are you sure you want to end this recording?</value>
    </data>
    <data name="recording.ui.dialog.finish.positive" xml:space="preserve">
        <value>Yes</value>
    </data>
    <data name="recording.ui.dialog.finish.negative" xml:space="preserve">
        <value>No</value>
    </data>
    <!-- RECORD SCREEN BACK -->
    <data name="recording.ui.dialog.back.title" xml:space="preserve">
        <value>You are recording</value>
    </data>
    <data name="recording.ui.dialog.back.body" xml:space="preserve">
        <value>If you go back the recording will not be saved.</value>
    </data>
    <data name="recording.ui.dialog.back.positive" xml:space="preserve">
        <value>Go back</value>
    </data>
    <data name="recording.ui.dialog.back.negative" xml:space="preserve">
        <value>Continue recording</value>
    </data>
    <!-- FIRST UPLOAD DEBRIEFING -->
    <data name="debriefing.activity.title" xml:space="preserve">
        <value>Congratulations!</value>
    </data>
    <data name="debriefing.congrats.title" xml:space="preserve">
        <value>You've uploaded a conversation!</value>
    </data>
    <data name="debriefing.congrats.body" xml:space="preserve">
        <value>Thank you for sharing your experiences - the recording has been uploaded to the Gabber website at {0}. Why not give it a visit and see what others have uploaded? </value>
    </data>
    <data name="debriefing.consent.title" xml:space="preserve">
        <value>Changing your consent</value>
    </data>
    <data name="debriefing.consent.body1" xml:space="preserve">
        <value>For the next 24 hours, the recording is only available to the conversation's participants.</value>
    </data>
    <data name="debriefing.consent.body2" xml:space="preserve">
        <value>If at any time someone in the conversation has changed their mind about who they want to be able to access the recording, they can still change their consent.</value>
    </data>
    <data name="debriefing.consent.body3" xml:space="preserve">
        <value>Each of you will have received an email with a link to view and/or modify your given consent. If you can't see it, be sure to check your spam folder!</value>
    </data>
    <data name="debriefing.finish.button" xml:space="preserve">
        <value>Understood, don't show this again</value>
    </data>
</root>
